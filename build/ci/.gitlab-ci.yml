# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# List of stages for jobs, and their order of execution
stages:
  - build
  - deploy

build_web:
  stage: build
  image: docker:latest
  services:
    - docker:latest
  script:
    - mkdir ./tls
    - cd
    - apk add curl bash
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
    - ls -lah ~/.secure_files
    - cp ~/.secure_files/cert.pem $CI_PROJECT_DIR/tls
    - cp  ~/.secure_files/key.pem $CI_PROJECT_DIR/tls
    - echo $CI_REGISTRY_USER $CI_REGISTRY_PASSWORD $CI_REGISTRY $CI_REGISTRY_IMAGE $CI_COMMIT_REF_SLUG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_SLUG -f ./deployments/web/dockerfile .
    - docker push $CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_SLUG
  only:
    - main
    - deploy-test

build_mysql:
  stage: build
  image: docker:latest
  services:
    - docker:latest
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/mysql:$CI_COMMIT_REF_SLUG -f ./deployments/mysql/dockerfile .
    - docker push $CI_REGISTRY_IMAGE/mysql:$CI_COMMIT_REF_SLUG
  only:
    - main
    - deploy-test

# deploy:
#   stage: deploy
#   image: docker:26-dind-rootless
#   services:
#     - docker:26-dind-rootless
#   script:
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     - docker pull $CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_SLUG
#     - docker pull $CI_REGISTRY_IMAGE/mysql:$CI_COMMIT_REF_SLUG
#     - docker stack deploy --with-registry-auth -c docker-compose.yml neuronews
#   only:
#     - main
#     - deploy-test
#   environment:
#     name: production
